apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = 'io.ktor.server.netty.DevelopmentEngine'

repositories {
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Ktor
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"

    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"

    compile project(":common-serialization-jvm")


    // Test
    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"


}

kotlin {
    experimental {
         coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task copyBundleJs(type: Copy, dependsOn: ":frontend:bundle") {
    from("${rootProject.findProject(":frontend").buildDir}/bundle") {
        include "*.js"
        include "*.js.map"
    }
    into "$buildDir/resources/main/js"
}

processResources.dependsOn(copyBundleJs)


task copyToLib(type: Copy) {
    into "$buildDir/libs/lib"
    from configurations.runtime
}

processResources.dependsOn(copyToLib)
